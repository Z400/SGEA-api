package sgea.sistema.sgea.service;

import java.util.List;
import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import sgea.sistema.sgea.model.Fornecedor;
import sgea.sistema.sgea.repository.FornecedorRepository;

@Service
public class FornecedorService {
	
	@Autowired
	private FornecedorRepository fornecedorRepository;
	
	public Fornecedor cadastrarFornecedor(Fornecedor fornecedor) {
		return fornecedorRepository.save(fornecedor);
	}

	public List<Fornecedor> listarFornecedores(){
		return fornecedorRepository.findAll();
	}
	
	public void deletarFornecedor(String cnpj) {
		fornecedorRepository.deleteById(cnpj);
	}
	
	public Fornecedor atualizarFornecedor(String cnpj, Fornecedor dadosAtualizadosFornecedor) {
		
		Optional<Fornecedor> verifyExisting = fornecedorRepository.findById(cnpj);
		
		if(verifyExisting.isPresent()) {
			
			Fornecedor fornecedor = verifyExisting.get();
			
			fornecedor.setCep(dadosAtualizadosFornecedor.getCep());
			fornecedor.setCidade(dadosAtualizadosFornecedor.getCidade());
			fornecedor.setCnpj(dadosAtualizadosFornecedor.getCnpj());
			fornecedor.setComplemento(dadosAtualizadosFornecedor.getComplemento());
			fornecedor.setDataNascimento(dadosAtualizadosFornecedor.getDataNascimento());
			fornecedor.setEmail(dadosAtualizadosFornecedor.getEmail());
			fornecedor.setEndereco(dadosAtualizadosFornecedor.getEndereco());
			fornecedor.setEstado(dadosAtualizadosFornecedor.getEstado());
			fornecedor.setNome(dadosAtualizadosFornecedor.getNome());
			fornecedor.setNumero(dadosAtualizadosFornecedor.getNumero());
			fornecedor.setSituacao(dadosAtualizadosFornecedor.getSituacao());
			
			
		}
		
	}
	
}
