package sgea.sistema.sgea.service;

import java.util.List;
import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import sgea.sistema.sgea.model.Cliente;
import sgea.sistema.sgea.repository.ClienteRepository;

@Service
public class ClienteService {
	
	@Autowired
	public ClienteRepository clienteRepository;
	
		
	public Cliente cadastrarCliente(Cliente cliente) {
		return clienteRepository.save(cliente);
	}
	
	public List<Cliente> listarClientes(){
		List<Cliente> clientes = clienteRepository.findAll();
		System.out.println(clientes);
		return clientes;
	}
	
	public Cliente alterarCliente(String cpf, Cliente dadosAtualizados) {
		
			Optional<Cliente> verifyExisting = clienteRepository.findByCpf(cpf);
		
		if(verifyExisting.isPresent()) {
			
			Cliente clientePresente = verifyExisting.get();
			
			clientePresente.setCep(dadosAtualizados.getCep());
			clientePresente.setCidade(dadosAtualizados.getCidade());
			clientePresente.setComplemento(dadosAtualizados.getComplemento());
			clientePresente.setCpf(dadosAtualizados.getCpf());
			clientePresente.setDatanascimento(dadosAtualizados.getDatanascimento());
			clientePresente.setEmail(dadosAtualizados.getEmail());
			clientePresente.setEndereco(dadosAtualizados.getEndereco());
			clientePresente.setEstado(dadosAtualizados.getEstado());
			clientePresente.setNome(dadosAtualizados.getNome());
			clientePresente.setNumero(dadosAtualizados.getNumero());
			clientePresente.setTelefone(dadosAtualizados.getNumero());
			return clienteRepository.save(clientePresente);
		} else {
			 throw new IllegalArgumentException("Erro durante a atualização deste cliente!");
		}	
	}
}
