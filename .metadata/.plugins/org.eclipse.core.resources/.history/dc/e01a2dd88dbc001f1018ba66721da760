package sgea.sistema.sgea.model;

import java.io.Serializable;
import java.time.LocalDate;
import java.util.Random;

import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.GenerationType;
import jakarta.persistence.Id;
import jakarta.persistence.PrePersist;
import jakarta.persistence.Table;
import jakarta.validation.constraints.NotBlank;
import jakarta.validation.constraints.NotNull;

@Entity
@Table(name = "faturasgea")
public class Fatura implements Serializable{
	 
	private static final long serialVersionUID = 1L;
	
	@PrePersist
	public void iniciarMetodosEspecificos() {
		this.capturarData();
		this.gerarSequencia();
	}
	  
	@Id
	@GeneratedValue(strategy = GenerationType.IDENTITY)
	@Column (name = "identificador")
	private Long identificador;
	
	@Column (name = "codigofatura")
	private String codigoFatura;
	
	@Column (name = "datacadastro")
	private LocalDate dataCadastro;
	
	@Column(name = "empresadevedora")
	@NotBlank(message = "O campo empresa devedora n達o pode estar em branco!")
	private String empresaDevedora;
	
	@Column (name = "datavencimento")
	@NotBlank(message = "O campo data de vencimento n達o pode estar em branco!")
	private LocalDate dataVencimento;
	
	@Column (name = "diasalerta")
	NotNull(message = "O campo dias para alerta n達o pode estar em branco!")
	private Integer diasAlerta;
	
	@Column (name = "valorfatura")
	@NotBlank(message = "O campo valor da fatura n達o pode estar em branco!")
	private Double valorFatura;
	
	public Fatura(Long identificador, String codigoFatura,String empresaDevedora,LocalDate dataVencimento,Integer diasAlerta,Double valorFatura) {
		super();
		this.identificador = identificador;
		this.codigoFatura = codigoFatura;
		this.empresaDevedora = empresaDevedora;
		this.dataVencimento = dataVencimento;
		this.diasAlerta = diasAlerta;
		this.valorFatura = valorFatura;
	}

	public Fatura() {}
	
	
	public String getCodigoFatura() {
		return codigoFatura;
	}

	public void setCodigoFatura(String codigoFatura) {
		this.codigoFatura = codigoFatura;
	}

	public String getEmpresaDevedora() {
		return empresaDevedora;
	}

	public void setEmpresaDevedora(String empresaDevedora) {
		this.empresaDevedora = empresaDevedora;
	}

	public LocalDate getDataVencimento() {
		return dataVencimento;
	}

	public void setDataVencimento(LocalDate dataVencimento) {
		this.dataVencimento = dataVencimento;
	}

	public Integer getDiasAlerta() {
		return diasAlerta;
	}

	public void setDiasAlerta(Integer diasAlerta) {
		this.diasAlerta = diasAlerta;
	}

	public Double getValorFatura() {
		return valorFatura;
	}

	public void setValorFatura(Double valorFatura) {
		this.valorFatura = valorFatura;
	}
	
	public LocalDate getDataCadastro() {
		return dataCadastro;
	}

	public void setDataCadastro(LocalDate dataCadastro) {
		this.dataCadastro = dataCadastro;
	}
	
	public Long getIdentificador() {
		return identificador;
	}

	public void setIdentificador(Long identificador) {
		this.identificador = identificador;
	}

	
	private String gerarSequencia() {
		
		Random random = new Random();
		StringBuilder sb = new StringBuilder();
		while(sb.length() < 13) {
			sb.append(random.nextInt(13));
		}
		return sb.toString();
		
	}
	
	
	public void adicionarSequencia() {
		this.codigoFatura = gerarSequencia();
	}
	

	public void capturarData() {
		this.dataCadastro = LocalDate.now();
	}

	
	 
	
	

}
